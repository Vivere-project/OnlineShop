{"ast":null,"code":"import _asyncToGenerator from \"/Users/valeriuseremet/Projects/OnlineShop/OnlineShop.Web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ItemCount } from \"../models/cart\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./local-storage.service\";\nexport class CartService {\n  constructor(localStorageService) {\n    this.localStorageService = localStorageService;\n  }\n\n  addItem(item) {\n    let cart = [];\n    this.localStorageService.subscribe(data => cart = data.cart);\n\n    if (cart[item.id]) {\n      cart[item.id].count += 1;\n      this.localStorageService.addToStorage(\"cart\", JSON.stringify(cart));\n    } else {\n      this.localStorageService.subscribe(data => {\n        data.itemsCache.forEach(item_ => {\n          cart[item_.id] = new ItemCount(item_, item_.id == item.id ? 1 : 0);\n        });\n      });\n      this.localStorageService.addToStorage(\"cart\", JSON.stringify([item]));\n    }\n  }\n\n  addItems(item, count) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let cart = [];\n\n      _this.localStorageService.subscribe(data => cart = data.cart);\n\n      if (cart[item.id]) {\n        cart[item.id].count += count;\n\n        _this.localStorageService.addToStorage(\"cart\", JSON.stringify(cart));\n      } else {\n        let a = yield _this.localStorageService; // a.\n\n        _this.localStorageService.subscribe(data => {\n          data.itemsCache.forEach(item_ => {\n            cart[item_.id] = new ItemCount(item_, item_.id == item.id ? count : 0);\n          });\n        });\n\n        _this.localStorageService.addToStorage(\"cart\", JSON.stringify([item]));\n      }\n    })();\n  } // addItems(item: Item, count: number): void {\n  //   let cart: Cart = []\n  //   this.localStorageService.subscribe(data => cart = data.cart)\n  //   if (Object.keys(cart).length != 0) {\n  //     this.localStorageService.addToStorage(\"cart\", JSON.stringify(item))\n  //   } else {\n  //     this.localStorageService.addToStorage(\"cart\", JSON.stringify([item]))\n  //   }\n  // }\n\n\n  getItems() {\n    let cart = [];\n    this.localStorageService.subscribe(data => cart = data.cart);\n\n    if (Object.keys(cart).length != 0) {\n      return cart;\n    } else {\n      return [];\n    }\n  }\n\n  removeItems() {\n    this.localStorageService.removeFromStorage('cart'); // localStorage.setItem('cart', \"\");\n  }\n\n}\n\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.LocalStorageService));\n};\n\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/valeriuseremet/Projects/OnlineShop/OnlineShop.Web/src/app/services/cart.service.ts"],"names":["ItemCount","i0","i1","CartService","constructor","localStorageService","addItem","item","cart","subscribe","data","id","count","addToStorage","JSON","stringify","itemsCache","forEach","item_","addItems","a","getItems","Object","keys","length","removeItems","removeFromStorage","ɵfac","CartService_Factory","t","ɵɵinject","LocalStorageService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { ItemCount } from \"../models/cart\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./local-storage.service\";\nexport class CartService {\n    constructor(localStorageService) {\n        this.localStorageService = localStorageService;\n    }\n    addItem(item) {\n        let cart = [];\n        this.localStorageService.subscribe(data => cart = data.cart);\n        if (cart[item.id]) {\n            cart[item.id].count += 1;\n            this.localStorageService.addToStorage(\"cart\", JSON.stringify(cart));\n        }\n        else {\n            this.localStorageService.subscribe(data => {\n                data.itemsCache.forEach(item_ => {\n                    cart[item_.id] = new ItemCount(item_, item_.id == item.id ? 1 : 0);\n                });\n            });\n            this.localStorageService.addToStorage(\"cart\", JSON.stringify([item]));\n        }\n    }\n    async addItems(item, count) {\n        let cart = [];\n        this.localStorageService.subscribe(data => cart = data.cart);\n        if (cart[item.id]) {\n            cart[item.id].count += count;\n            this.localStorageService.addToStorage(\"cart\", JSON.stringify(cart));\n        }\n        else {\n            let a = await this.localStorageService;\n            // a.\n            this.localStorageService.subscribe(data => {\n                data.itemsCache.forEach(item_ => {\n                    cart[item_.id] = new ItemCount(item_, item_.id == item.id ? count : 0);\n                });\n            });\n            this.localStorageService.addToStorage(\"cart\", JSON.stringify([item]));\n        }\n    }\n    // addItems(item: Item, count: number): void {\n    //   let cart: Cart = []\n    //   this.localStorageService.subscribe(data => cart = data.cart)\n    //   if (Object.keys(cart).length != 0) {\n    //     this.localStorageService.addToStorage(\"cart\", JSON.stringify(item))\n    //   } else {\n    //     this.localStorageService.addToStorage(\"cart\", JSON.stringify([item]))\n    //   }\n    // }\n    getItems() {\n        let cart = [];\n        this.localStorageService.subscribe(data => cart = data.cart);\n        if (Object.keys(cart).length != 0) {\n            return cart;\n        }\n        else {\n            return [];\n        }\n    }\n    removeItems() {\n        this.localStorageService.removeFromStorage('cart');\n        // localStorage.setItem('cart', \"\");\n    }\n}\nCartService.ɵfac = function CartService_Factory(t) { return new (t || CartService)(i0.ɵɵinject(i1.LocalStorageService)); };\nCartService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CartService, factory: CartService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}